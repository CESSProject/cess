
//! Autogenerated weights for pallet_file_bank
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-04-09, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `ytqaljn-virtual-machine`, CPU: `12th Gen Intel(R) Core(TM) i5-12400`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: Some("cess-initial-testnet"), DB CACHE: 1024

// Executed Command:
// ./target/release/cess-node
// benchmark
// pallet
// --chain
// cess-initial-testnet
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// pallet_file_bank
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --template=./.maintain/frame-weight-template.hbs
// --output=./pallets/file-bank/src/temp_weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_file_bank.
pub trait WeightInfo {
	fn cert_idle_space() -> Weight;
	fn upload_declaration(v: u32, ) -> Weight;
	fn transfer_report(v: u32, ) -> Weight;
	fn calculate_report() -> Weight;
	fn replace_idle_space(v: u32, ) -> Weight;
	fn delete_file() -> Weight;
	fn create_bucket() -> Weight;
	fn delete_bucket() -> Weight;
	fn generate_restoral_order() -> Weight;
	fn claim_restoral_order() -> Weight;
	fn claim_restoral_noexist_order() -> Weight;
	fn restoral_order_complete() -> Weight;
	fn ownership_transfer() -> Weight;
}

/// Weights for pallet_file_bank using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: `TeeWorker::Workers` (r:1 w:0)
	// Proof: `TeeWorker::Workers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `TeeWorker::MasterPubkey` (r:1 w:0)
	// Proof: `TeeWorker::MasterPubkey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `TeeWorker::LastWork` (r:1 w:1)
	// Proof: `TeeWorker::LastWork` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `Sminer::MinerItems` (r:1 w:1)
	// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	// Storage: `SchedulerCredit::CurrentCounters` (r:1 w:1)
	// Proof: `SchedulerCredit::CurrentCounters` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	// Storage: `StorageHandler::TotalIdleSpace` (r:1 w:1)
	// Proof: `StorageHandler::TotalIdleSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn cert_idle_space() -> Weight {
		// Minimum execution time: 99_340 nanoseconds.
		Weight::from_parts(129_775_000)
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: `FileBank::File` (r:1 w:0)
	// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	// Storage: `StorageHandler::UserOwnedSpace` (r:1 w:1)
	// Proof: `StorageHandler::UserOwnedSpace` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	// Storage: `FileBank::DealMap` (r:0 w:1)
	// Proof: `FileBank::DealMap` (`max_values`: None, `max_size`: Some(833655), added: 836130, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 30]`.
	fn upload_declaration(v: u32, ) -> Weight {
		// Minimum execution time: 32_442 nanoseconds.
		Weight::from_parts(42_549_169)
			// Standard Error: 57_847
			.saturating_add(Weight::from_parts(780_499).saturating_mul(v.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: `Sminer::MinerItems` (r:1 w:1)
	// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	// Storage: `FileBank::DealMap` (r:1 w:1)
	// Proof: `FileBank::DealMap` (`max_values`: None, `max_size`: Some(833655), added: 836130, mode: `MaxEncodedLen`)
	// Storage: `Sminer::PendingReplacements` (r:12 w:12)
	// Proof: `Sminer::PendingReplacements` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	// Storage: `StorageHandler::UserOwnedSpace` (r:1 w:1)
	// Proof: `StorageHandler::UserOwnedSpace` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	// Storage: `StorageHandler::TotalIdleSpace` (r:1 w:1)
	// Proof: `StorageHandler::TotalIdleSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	// Storage: `StorageHandler::TotalServiceSpace` (r:1 w:1)
	// Proof: `StorageHandler::TotalServiceSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	// Storage: `FileBank::Bucket` (r:1 w:1)
	// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	// Storage: `FileBank::UserBucketList` (r:1 w:1)
	// Proof: `FileBank::UserBucketList` (`max_values`: None, `max_size`: Some(64050), added: 66525, mode: `MaxEncodedLen`)
	// Storage: `FileBank::UserHoldFileList` (r:1 w:1)
	// Proof: `FileBank::UserHoldFileList` (`max_values`: None, `max_size`: Some(40000052), added: 40002527, mode: `MaxEncodedLen`)
	// Storage: `FileBank::File` (r:0 w:1)
	// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 30]`.
	fn transfer_report(v: u32, ) -> Weight {
		// Minimum execution time: 117_794 nanoseconds.
		Weight::from_parts(136_345_909)
			// Standard Error: 126_975
			.saturating_add(Weight::from_parts(3_062_880).saturating_mul(v.into()))
			.saturating_add(T::DbWeight::get().reads(20))
			.saturating_add(T::DbWeight::get().writes(21))
	}
	// Storage: `TeeWorker::MasterPubkey` (r:1 w:0)
	// Proof: `TeeWorker::MasterPubkey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `TeeWorker::Workers` (r:1 w:0)
	// Proof: `TeeWorker::Workers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `FileBank::File` (r:1 w:1)
	// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	// Storage: `Sminer::MinerItems` (r:1 w:1)
	// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	// Storage: `SchedulerCredit::CurrentCounters` (r:1 w:1)
	// Proof: `SchedulerCredit::CurrentCounters` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	// Storage: `TeeWorker::LastWork` (r:1 w:1)
	// Proof: `TeeWorker::LastWork` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn calculate_report() -> Weight {
		// Minimum execution time: 127_221 nanoseconds.
		Weight::from_parts(149_569_000)
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: `TeeWorker::Workers` (r:1 w:0)
	// Proof: `TeeWorker::Workers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `TeeWorker::MasterPubkey` (r:1 w:0)
	// Proof: `TeeWorker::MasterPubkey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `TeeWorker::LastWork` (r:1 w:1)
	// Proof: `TeeWorker::LastWork` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `Sminer::MinerItems` (r:1 w:1)
	// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	// Storage: `Sminer::PendingReplacements` (r:1 w:1)
	// Proof: `Sminer::PendingReplacements` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	// Storage: `SchedulerCredit::CurrentCounters` (r:1 w:1)
	// Proof: `SchedulerCredit::CurrentCounters` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[8, 30]`.
	fn replace_idle_space(v: u32, ) -> Weight {
		// Minimum execution time: 103_229 nanoseconds.
		Weight::from_parts(125_414_085)
			// Standard Error: 101_191
			.saturating_add(Weight::from_parts(319_789).saturating_mul(v.into()))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: `FileBank::File` (r:1 w:1)
	// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	// Storage: `Sminer::RestoralTarget` (r:12 w:0)
	// Proof: `Sminer::RestoralTarget` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	// Storage: `Sminer::MinerItems` (r:12 w:12)
	// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	// Storage: `StorageHandler::UserOwnedSpace` (r:1 w:1)
	// Proof: `StorageHandler::UserOwnedSpace` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	// Storage: `StorageHandler::TotalServiceSpace` (r:1 w:1)
	// Proof: `StorageHandler::TotalServiceSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	// Storage: `FileBank::Bucket` (r:1 w:1)
	// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	// Storage: `FileBank::UserHoldFileList` (r:1 w:1)
	// Proof: `FileBank::UserHoldFileList` (`max_values`: None, `max_size`: Some(40000052), added: 40002527, mode: `MaxEncodedLen`)
	fn delete_file() -> Weight {
		// Minimum execution time: 356_490 nanoseconds.
		Weight::from_parts(401_108_000)
			.saturating_add(T::DbWeight::get().reads(29))
			.saturating_add(T::DbWeight::get().writes(17))
	}
	// Storage: `FileBank::Bucket` (r:1 w:1)
	// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	// Storage: `FileBank::UserBucketList` (r:1 w:1)
	// Proof: `FileBank::UserBucketList` (`max_values`: None, `max_size`: Some(64050), added: 66525, mode: `MaxEncodedLen`)
	fn create_bucket() -> Weight {
		// Minimum execution time: 18_750 nanoseconds.
		Weight::from_parts(38_981_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: `FileBank::Bucket` (r:1 w:1)
	// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	// Storage: `FileBank::UserBucketList` (r:1 w:1)
	// Proof: `FileBank::UserBucketList` (`max_values`: None, `max_size`: Some(64050), added: 66525, mode: `MaxEncodedLen`)
	fn delete_bucket() -> Weight {
		// Minimum execution time: 23_390 nanoseconds.
		Weight::from_parts(26_619_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: `FileBank::RestoralOrder` (r:1 w:1)
	// Proof: `FileBank::RestoralOrder` (`max_values`: None, `max_size`: Some(284), added: 2759, mode: `MaxEncodedLen`)
	// Storage: `FileBank::File` (r:1 w:1)
	// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	fn generate_restoral_order() -> Weight {
		// Minimum execution time: 43_695 nanoseconds.
		Weight::from_parts(56_283_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: `Sminer::MinerItems` (r:1 w:0)
	// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	// Storage: `FileBank::RestoralOrder` (r:1 w:1)
	// Proof: `FileBank::RestoralOrder` (`max_values`: None, `max_size`: Some(284), added: 2759, mode: `MaxEncodedLen`)
	fn claim_restoral_order() -> Weight {
		// Minimum execution time: 42_902 nanoseconds.
		Weight::from_parts(51_653_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: `Sminer::MinerItems` (r:1 w:0)
	// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	// Storage: `FileBank::RestoralOrder` (r:1 w:1)
	// Proof: `FileBank::RestoralOrder` (`max_values`: None, `max_size`: Some(284), added: 2759, mode: `MaxEncodedLen`)
	// Storage: `Sminer::RestoralTarget` (r:1 w:0)
	// Proof: `Sminer::RestoralTarget` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	// Storage: `FileBank::File` (r:1 w:1)
	// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	fn claim_restoral_noexist_order() -> Weight {
		// Minimum execution time: 54_824 nanoseconds.
		Weight::from_parts(60_858_000)
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: `Sminer::MinerItems` (r:2 w:2)
	// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	// Storage: `FileBank::RestoralOrder` (r:1 w:1)
	// Proof: `FileBank::RestoralOrder` (`max_values`: None, `max_size`: Some(284), added: 2759, mode: `MaxEncodedLen`)
	// Storage: `FileBank::File` (r:1 w:1)
	// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	// Storage: `Sminer::PendingReplacements` (r:1 w:1)
	// Proof: `Sminer::PendingReplacements` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	// Storage: `Sminer::RestoralTarget` (r:1 w:0)
	// Proof: `Sminer::RestoralTarget` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	fn restoral_order_complete() -> Weight {
		// Minimum execution time: 91_944 nanoseconds.
		Weight::from_parts(106_112_000)
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	// Storage: `FileBank::File` (r:1 w:1)
	// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	// Storage: `FileBank::Bucket` (r:2 w:2)
	// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	// Storage: `StorageHandler::UserOwnedSpace` (r:2 w:2)
	// Proof: `StorageHandler::UserOwnedSpace` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	// Storage: `FileBank::UserHoldFileList` (r:2 w:2)
	// Proof: `FileBank::UserHoldFileList` (`max_values`: None, `max_size`: Some(40000052), added: 40002527, mode: `MaxEncodedLen`)
	fn ownership_transfer() -> Weight {
		// Minimum execution time: 85_584 nanoseconds.
		Weight::from_parts(102_878_000)
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(7))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: `TeeWorker::Workers` (r:1 w:0)
	// Proof: `TeeWorker::Workers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `TeeWorker::MasterPubkey` (r:1 w:0)
	// Proof: `TeeWorker::MasterPubkey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `TeeWorker::LastWork` (r:1 w:1)
	// Proof: `TeeWorker::LastWork` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `Sminer::MinerItems` (r:1 w:1)
	// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	// Storage: `SchedulerCredit::CurrentCounters` (r:1 w:1)
	// Proof: `SchedulerCredit::CurrentCounters` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	// Storage: `StorageHandler::TotalIdleSpace` (r:1 w:1)
	// Proof: `StorageHandler::TotalIdleSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn cert_idle_space() -> Weight {
		// Minimum execution time: 99_340 nanoseconds.
		Weight::from_parts(129_775_000)
			.saturating_add(RocksDbWeight::get().reads(6))
			.saturating_add(RocksDbWeight::get().writes(4))
	}
	// Storage: `FileBank::File` (r:1 w:0)
	// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	// Storage: `StorageHandler::UserOwnedSpace` (r:1 w:1)
	// Proof: `StorageHandler::UserOwnedSpace` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	// Storage: `FileBank::DealMap` (r:0 w:1)
	// Proof: `FileBank::DealMap` (`max_values`: None, `max_size`: Some(833655), added: 836130, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 30]`.
	fn upload_declaration(v: u32, ) -> Weight {
		// Minimum execution time: 32_442 nanoseconds.
		Weight::from_parts(42_549_169)
			// Standard Error: 57_847
			.saturating_add(Weight::from_parts(780_499).saturating_mul(v.into()))
			.saturating_add(RocksDbWeight::get().reads(2))
			.saturating_add(RocksDbWeight::get().writes(2))
	}
	// Storage: `Sminer::MinerItems` (r:1 w:1)
	// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	// Storage: `FileBank::DealMap` (r:1 w:1)
	// Proof: `FileBank::DealMap` (`max_values`: None, `max_size`: Some(833655), added: 836130, mode: `MaxEncodedLen`)
	// Storage: `Sminer::PendingReplacements` (r:12 w:12)
	// Proof: `Sminer::PendingReplacements` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	// Storage: `StorageHandler::UserOwnedSpace` (r:1 w:1)
	// Proof: `StorageHandler::UserOwnedSpace` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	// Storage: `StorageHandler::TotalIdleSpace` (r:1 w:1)
	// Proof: `StorageHandler::TotalIdleSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	// Storage: `StorageHandler::TotalServiceSpace` (r:1 w:1)
	// Proof: `StorageHandler::TotalServiceSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	// Storage: `FileBank::Bucket` (r:1 w:1)
	// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	// Storage: `FileBank::UserBucketList` (r:1 w:1)
	// Proof: `FileBank::UserBucketList` (`max_values`: None, `max_size`: Some(64050), added: 66525, mode: `MaxEncodedLen`)
	// Storage: `FileBank::UserHoldFileList` (r:1 w:1)
	// Proof: `FileBank::UserHoldFileList` (`max_values`: None, `max_size`: Some(40000052), added: 40002527, mode: `MaxEncodedLen`)
	// Storage: `FileBank::File` (r:0 w:1)
	// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 30]`.
	fn transfer_report(v: u32, ) -> Weight {
		// Minimum execution time: 117_794 nanoseconds.
		Weight::from_parts(136_345_909)
			// Standard Error: 126_975
			.saturating_add(Weight::from_parts(3_062_880).saturating_mul(v.into()))
			.saturating_add(RocksDbWeight::get().reads(20))
			.saturating_add(RocksDbWeight::get().writes(21))
	}
	// Storage: `TeeWorker::MasterPubkey` (r:1 w:0)
	// Proof: `TeeWorker::MasterPubkey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `TeeWorker::Workers` (r:1 w:0)
	// Proof: `TeeWorker::Workers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `FileBank::File` (r:1 w:1)
	// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	// Storage: `Sminer::MinerItems` (r:1 w:1)
	// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	// Storage: `SchedulerCredit::CurrentCounters` (r:1 w:1)
	// Proof: `SchedulerCredit::CurrentCounters` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	// Storage: `TeeWorker::LastWork` (r:1 w:1)
	// Proof: `TeeWorker::LastWork` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn calculate_report() -> Weight {
		// Minimum execution time: 127_221 nanoseconds.
		Weight::from_parts(149_569_000)
			.saturating_add(RocksDbWeight::get().reads(6))
			.saturating_add(RocksDbWeight::get().writes(4))
	}
	// Storage: `TeeWorker::Workers` (r:1 w:0)
	// Proof: `TeeWorker::Workers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `TeeWorker::MasterPubkey` (r:1 w:0)
	// Proof: `TeeWorker::MasterPubkey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `TeeWorker::LastWork` (r:1 w:1)
	// Proof: `TeeWorker::LastWork` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `Sminer::MinerItems` (r:1 w:1)
	// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	// Storage: `Sminer::PendingReplacements` (r:1 w:1)
	// Proof: `Sminer::PendingReplacements` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	// Storage: `SchedulerCredit::CurrentCounters` (r:1 w:1)
	// Proof: `SchedulerCredit::CurrentCounters` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[8, 30]`.
	fn replace_idle_space(v: u32, ) -> Weight {
		// Minimum execution time: 103_229 nanoseconds.
		Weight::from_parts(125_414_085)
			// Standard Error: 101_191
			.saturating_add(Weight::from_parts(319_789).saturating_mul(v.into()))
			.saturating_add(RocksDbWeight::get().reads(6))
			.saturating_add(RocksDbWeight::get().writes(4))
	}
	// Storage: `FileBank::File` (r:1 w:1)
	// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	// Storage: `Sminer::RestoralTarget` (r:12 w:0)
	// Proof: `Sminer::RestoralTarget` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	// Storage: `Sminer::MinerItems` (r:12 w:12)
	// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	// Storage: `StorageHandler::UserOwnedSpace` (r:1 w:1)
	// Proof: `StorageHandler::UserOwnedSpace` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	// Storage: `StorageHandler::TotalServiceSpace` (r:1 w:1)
	// Proof: `StorageHandler::TotalServiceSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	// Storage: `FileBank::Bucket` (r:1 w:1)
	// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	// Storage: `FileBank::UserHoldFileList` (r:1 w:1)
	// Proof: `FileBank::UserHoldFileList` (`max_values`: None, `max_size`: Some(40000052), added: 40002527, mode: `MaxEncodedLen`)
	fn delete_file() -> Weight {
		// Minimum execution time: 356_490 nanoseconds.
		Weight::from_parts(401_108_000)
			.saturating_add(RocksDbWeight::get().reads(29))
			.saturating_add(RocksDbWeight::get().writes(17))
	}
	// Storage: `FileBank::Bucket` (r:1 w:1)
	// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	// Storage: `FileBank::UserBucketList` (r:1 w:1)
	// Proof: `FileBank::UserBucketList` (`max_values`: None, `max_size`: Some(64050), added: 66525, mode: `MaxEncodedLen`)
	fn create_bucket() -> Weight {
		// Minimum execution time: 18_750 nanoseconds.
		Weight::from_parts(38_981_000)
			.saturating_add(RocksDbWeight::get().reads(2))
			.saturating_add(RocksDbWeight::get().writes(2))
	}
	// Storage: `FileBank::Bucket` (r:1 w:1)
	// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	// Storage: `FileBank::UserBucketList` (r:1 w:1)
	// Proof: `FileBank::UserBucketList` (`max_values`: None, `max_size`: Some(64050), added: 66525, mode: `MaxEncodedLen`)
	fn delete_bucket() -> Weight {
		// Minimum execution time: 23_390 nanoseconds.
		Weight::from_parts(26_619_000)
			.saturating_add(RocksDbWeight::get().reads(2))
			.saturating_add(RocksDbWeight::get().writes(2))
	}
	// Storage: `FileBank::RestoralOrder` (r:1 w:1)
	// Proof: `FileBank::RestoralOrder` (`max_values`: None, `max_size`: Some(284), added: 2759, mode: `MaxEncodedLen`)
	// Storage: `FileBank::File` (r:1 w:1)
	// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	fn generate_restoral_order() -> Weight {
		// Minimum execution time: 43_695 nanoseconds.
		Weight::from_parts(56_283_000)
			.saturating_add(RocksDbWeight::get().reads(2))
			.saturating_add(RocksDbWeight::get().writes(2))
	}
	// Storage: `Sminer::MinerItems` (r:1 w:0)
	// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	// Storage: `FileBank::RestoralOrder` (r:1 w:1)
	// Proof: `FileBank::RestoralOrder` (`max_values`: None, `max_size`: Some(284), added: 2759, mode: `MaxEncodedLen`)
	fn claim_restoral_order() -> Weight {
		// Minimum execution time: 42_902 nanoseconds.
		Weight::from_parts(51_653_000)
			.saturating_add(RocksDbWeight::get().reads(2))
			.saturating_add(RocksDbWeight::get().writes(1))
	}
	// Storage: `Sminer::MinerItems` (r:1 w:0)
	// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	// Storage: `FileBank::RestoralOrder` (r:1 w:1)
	// Proof: `FileBank::RestoralOrder` (`max_values`: None, `max_size`: Some(284), added: 2759, mode: `MaxEncodedLen`)
	// Storage: `Sminer::RestoralTarget` (r:1 w:0)
	// Proof: `Sminer::RestoralTarget` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	// Storage: `FileBank::File` (r:1 w:1)
	// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	fn claim_restoral_noexist_order() -> Weight {
		// Minimum execution time: 54_824 nanoseconds.
		Weight::from_parts(60_858_000)
			.saturating_add(RocksDbWeight::get().reads(4))
			.saturating_add(RocksDbWeight::get().writes(2))
	}
	// Storage: `Sminer::MinerItems` (r:2 w:2)
	// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	// Storage: `FileBank::RestoralOrder` (r:1 w:1)
	// Proof: `FileBank::RestoralOrder` (`max_values`: None, `max_size`: Some(284), added: 2759, mode: `MaxEncodedLen`)
	// Storage: `FileBank::File` (r:1 w:1)
	// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	// Storage: `Sminer::PendingReplacements` (r:1 w:1)
	// Proof: `Sminer::PendingReplacements` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	// Storage: `Sminer::RestoralTarget` (r:1 w:0)
	// Proof: `Sminer::RestoralTarget` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	fn restoral_order_complete() -> Weight {
		// Minimum execution time: 91_944 nanoseconds.
		Weight::from_parts(106_112_000)
			.saturating_add(RocksDbWeight::get().reads(6))
			.saturating_add(RocksDbWeight::get().writes(5))
	}
	// Storage: `FileBank::File` (r:1 w:1)
	// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	// Storage: `FileBank::Bucket` (r:2 w:2)
	// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	// Storage: `StorageHandler::UserOwnedSpace` (r:2 w:2)
	// Proof: `StorageHandler::UserOwnedSpace` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	// Storage: `FileBank::UserHoldFileList` (r:2 w:2)
	// Proof: `FileBank::UserHoldFileList` (`max_values`: None, `max_size`: Some(40000052), added: 40002527, mode: `MaxEncodedLen`)
	fn ownership_transfer() -> Weight {
		// Minimum execution time: 85_584 nanoseconds.
		Weight::from_parts(102_878_000)
			.saturating_add(RocksDbWeight::get().reads(7))
			.saturating_add(RocksDbWeight::get().writes(7))
	}
}
