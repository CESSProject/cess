
//! Autogenerated weights for `pallet_file_bank`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-04-12, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ytqaljn-virtual-machine`, CPU: `12th Gen Intel(R) Core(TM) i5-12400`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("cess-initial-testnet")`, DB CACHE: `1024`

// Executed Command:
// ./target/release/cess-node
// benchmark
// pallet
// --chain
// cess-initial-testnet
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// pallet_file_bank
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --template=./.maintain/frame-weight-template.hbs
// --output=./pallets/file-bank/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_file_bank`.
pub trait WeightInfo {
	fn cert_idle_space() -> Weight;
	fn upload_declaration(v: u32, ) -> Weight;
	fn transfer_report(v: u32, ) -> Weight;
	fn calculate_report() -> Weight;
	fn replace_idle_space() -> Weight;
	fn delete_file() -> Weight;
	fn create_bucket() -> Weight;
	fn delete_bucket() -> Weight;
	fn generate_restoral_order() -> Weight;
	fn claim_restoral_order() -> Weight;
	fn claim_restoral_noexist_order() -> Weight;
	fn restoral_order_complete() -> Weight;
	fn ownership_transfer() -> Weight;
}

/// Weights for `pallet_file_bank` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `TeeWorker::Workers` (r:1 w:0)
	/// Proof: `TeeWorker::Workers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `TeeWorker::MasterPubkey` (r:1 w:0)
	/// Proof: `TeeWorker::MasterPubkey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TeeWorker::LastWork` (r:1 w:1)
	/// Proof: `TeeWorker::LastWork` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `SchedulerCredit::CurrentCounters` (r:1 w:1)
	/// Proof: `SchedulerCredit::CurrentCounters` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::TotalIdleSpace` (r:1 w:1)
	/// Proof: `StorageHandler::TotalIdleSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn cert_idle_space() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4088`
		//  Estimated: `206644`
		// Minimum execution time: 100_224_000 picoseconds.
		Weight::from_parts(141_159_000, 206644)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `FileBank::File` (r:1 w:0)
	/// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::UserOwnedSpace` (r:1 w:1)
	/// Proof: `StorageHandler::UserOwnedSpace` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::DealMap` (r:0 w:1)
	/// Proof: `FileBank::DealMap` (`max_values`: None, `max_size`: Some(833655), added: 836130, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 30]`.
	fn upload_declaration(v: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `530`
		//  Estimated: `9292572`
		// Minimum execution time: 32_363_000 picoseconds.
		Weight::from_parts(40_900_937, 9292572)
			// Standard Error: 88_475
			.saturating_add(Weight::from_parts(1_750_349, 0).saturating_mul(v.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::DealMap` (r:1 w:1)
	/// Proof: `FileBank::DealMap` (`max_values`: None, `max_size`: Some(833655), added: 836130, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::PendingReplacements` (r:12 w:12)
	/// Proof: `Sminer::PendingReplacements` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::UserOwnedSpace` (r:1 w:1)
	/// Proof: `StorageHandler::UserOwnedSpace` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::TotalIdleSpace` (r:1 w:1)
	/// Proof: `StorageHandler::TotalIdleSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::TotalServiceSpace` (r:1 w:1)
	/// Proof: `StorageHandler::TotalServiceSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::Bucket` (r:1 w:1)
	/// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::UserBucketList` (r:1 w:1)
	/// Proof: `FileBank::UserBucketList` (`max_values`: None, `max_size`: Some(64050), added: 66525, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::UserHoldFileList` (r:1 w:1)
	/// Proof: `FileBank::UserHoldFileList` (`max_values`: None, `max_size`: Some(40000052), added: 40002527, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::File` (r:0 w:1)
	/// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 30]`.
	fn transfer_report(v: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4816 + v * (833 Â±0)`
		//  Estimated: `40003517`
		// Minimum execution time: 132_079_000 picoseconds.
		Weight::from_parts(160_182_023, 40003517)
			// Standard Error: 159_673
			.saturating_add(Weight::from_parts(2_559_055, 0).saturating_mul(v.into()))
			.saturating_add(T::DbWeight::get().reads(20_u64))
			.saturating_add(T::DbWeight::get().writes(21_u64))
	}
	/// Storage: `TeeWorker::MasterPubkey` (r:1 w:0)
	/// Proof: `TeeWorker::MasterPubkey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TeeWorker::Workers` (r:1 w:0)
	/// Proof: `TeeWorker::Workers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `FileBank::File` (r:1 w:1)
	/// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `SchedulerCredit::CurrentCounters` (r:1 w:1)
	/// Proof: `SchedulerCredit::CurrentCounters` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	/// Storage: `TeeWorker::LastWork` (r:1 w:1)
	/// Proof: `TeeWorker::LastWork` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn calculate_report() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5898`
		//  Estimated: `9292572`
		// Minimum execution time: 124_194_000 picoseconds.
		Weight::from_parts(157_038_000, 9292572)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `TeeWorker::Workers` (r:1 w:0)
	/// Proof: `TeeWorker::Workers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `TeeWorker::MasterPubkey` (r:1 w:0)
	/// Proof: `TeeWorker::MasterPubkey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TeeWorker::LastWork` (r:1 w:1)
	/// Proof: `TeeWorker::LastWork` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::PendingReplacements` (r:1 w:1)
	/// Proof: `Sminer::PendingReplacements` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	/// Storage: `SchedulerCredit::CurrentCounters` (r:1 w:1)
	/// Proof: `SchedulerCredit::CurrentCounters` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[8, 30]`.
	fn replace_idle_space() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4688`
		//  Estimated: `206644`
		// Minimum execution time: 109_706_000 picoseconds.
		Weight::from_parts(135_706_783, 206644)
			// Standard Error: 161_111
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `FileBank::File` (r:1 w:1)
	/// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::RestoralTarget` (r:12 w:0)
	/// Proof: `Sminer::RestoralTarget` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::MinerItems` (r:12 w:12)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::UserOwnedSpace` (r:1 w:1)
	/// Proof: `StorageHandler::UserOwnedSpace` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::TotalServiceSpace` (r:1 w:1)
	/// Proof: `StorageHandler::TotalServiceSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::Bucket` (r:1 w:1)
	/// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::UserHoldFileList` (r:1 w:1)
	/// Proof: `FileBank::UserHoldFileList` (`max_values`: None, `max_size`: Some(40000052), added: 40002527, mode: `MaxEncodedLen`)
	fn delete_file() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `41009`
		//  Estimated: `40003517`
		// Minimum execution time: 360_656_000 picoseconds.
		Weight::from_parts(470_737_000, 40003517)
			.saturating_add(T::DbWeight::get().reads(29_u64))
			.saturating_add(T::DbWeight::get().writes(17_u64))
	}
	/// Storage: `FileBank::Bucket` (r:1 w:1)
	/// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::UserBucketList` (r:1 w:1)
	/// Proof: `FileBank::UserBucketList` (`max_values`: None, `max_size`: Some(64050), added: 66525, mode: `MaxEncodedLen`)
	fn create_bucket() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `180`
		//  Estimated: `32036623`
		// Minimum execution time: 19_414_000 picoseconds.
		Weight::from_parts(20_234_000, 32036623)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `FileBank::Bucket` (r:1 w:1)
	/// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::UserBucketList` (r:1 w:1)
	/// Proof: `FileBank::UserBucketList` (`max_values`: None, `max_size`: Some(64050), added: 66525, mode: `MaxEncodedLen`)
	fn delete_bucket() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `403`
		//  Estimated: `32036623`
		// Minimum execution time: 24_268_000 picoseconds.
		Weight::from_parts(24_934_000, 32036623)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `FileBank::RestoralOrder` (r:1 w:1)
	/// Proof: `FileBank::RestoralOrder` (`max_values`: None, `max_size`: Some(284), added: 2759, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::File` (r:1 w:1)
	/// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	fn generate_restoral_order() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1759`
		//  Estimated: `9292572`
		// Minimum execution time: 44_623_000 picoseconds.
		Weight::from_parts(57_460_000, 9292572)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:0)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::RestoralOrder` (r:1 w:1)
	/// Proof: `FileBank::RestoralOrder` (`max_values`: None, `max_size`: Some(284), added: 2759, mode: `MaxEncodedLen`)
	fn claim_restoral_order() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4376`
		//  Estimated: `206644`
		// Minimum execution time: 46_358_000 picoseconds.
		Weight::from_parts(62_091_000, 206644)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:0)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::RestoralOrder` (r:1 w:1)
	/// Proof: `FileBank::RestoralOrder` (`max_values`: None, `max_size`: Some(284), added: 2759, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::RestoralTarget` (r:1 w:0)
	/// Proof: `Sminer::RestoralTarget` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::File` (r:1 w:1)
	/// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	fn claim_restoral_noexist_order() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5610`
		//  Estimated: `9292572`
		// Minimum execution time: 56_499_000 picoseconds.
		Weight::from_parts(70_522_000, 9292572)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:2 w:2)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::RestoralOrder` (r:1 w:1)
	/// Proof: `FileBank::RestoralOrder` (`max_values`: None, `max_size`: Some(284), added: 2759, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::File` (r:1 w:1)
	/// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::PendingReplacements` (r:1 w:1)
	/// Proof: `Sminer::PendingReplacements` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::RestoralTarget` (r:1 w:0)
	/// Proof: `Sminer::RestoralTarget` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	fn restoral_order_complete() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `9249`
		//  Estimated: `9292572`
		// Minimum execution time: 104_003_000 picoseconds.
		Weight::from_parts(127_926_000, 9292572)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `FileBank::File` (r:1 w:1)
	/// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::Bucket` (r:2 w:2)
	/// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::UserOwnedSpace` (r:2 w:2)
	/// Proof: `StorageHandler::UserOwnedSpace` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::UserHoldFileList` (r:2 w:2)
	/// Proof: `FileBank::UserHoldFileList` (`max_values`: None, `max_size`: Some(40000052), added: 40002527, mode: `MaxEncodedLen`)
	fn ownership_transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2609`
		//  Estimated: `80006044`
		// Minimum execution time: 89_104_000 picoseconds.
		Weight::from_parts(106_946_000, 80006044)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `TeeWorker::Workers` (r:1 w:0)
	/// Proof: `TeeWorker::Workers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `TeeWorker::MasterPubkey` (r:1 w:0)
	/// Proof: `TeeWorker::MasterPubkey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TeeWorker::LastWork` (r:1 w:1)
	/// Proof: `TeeWorker::LastWork` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `SchedulerCredit::CurrentCounters` (r:1 w:1)
	/// Proof: `SchedulerCredit::CurrentCounters` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::TotalIdleSpace` (r:1 w:1)
	/// Proof: `StorageHandler::TotalIdleSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn cert_idle_space() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4088`
		//  Estimated: `206644`
		// Minimum execution time: 100_224_000 picoseconds.
		Weight::from_parts(141_159_000, 206644)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `FileBank::File` (r:1 w:0)
	/// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::UserOwnedSpace` (r:1 w:1)
	/// Proof: `StorageHandler::UserOwnedSpace` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::DealMap` (r:0 w:1)
	/// Proof: `FileBank::DealMap` (`max_values`: None, `max_size`: Some(833655), added: 836130, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 30]`.
	fn upload_declaration(v: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `530`
		//  Estimated: `9292572`
		// Minimum execution time: 32_363_000 picoseconds.
		Weight::from_parts(40_900_937, 9292572)
			// Standard Error: 88_475
			.saturating_add(Weight::from_parts(1_750_349, 0).saturating_mul(v.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::DealMap` (r:1 w:1)
	/// Proof: `FileBank::DealMap` (`max_values`: None, `max_size`: Some(833655), added: 836130, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::PendingReplacements` (r:12 w:12)
	/// Proof: `Sminer::PendingReplacements` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::UserOwnedSpace` (r:1 w:1)
	/// Proof: `StorageHandler::UserOwnedSpace` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::TotalIdleSpace` (r:1 w:1)
	/// Proof: `StorageHandler::TotalIdleSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::TotalServiceSpace` (r:1 w:1)
	/// Proof: `StorageHandler::TotalServiceSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::Bucket` (r:1 w:1)
	/// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::UserBucketList` (r:1 w:1)
	/// Proof: `FileBank::UserBucketList` (`max_values`: None, `max_size`: Some(64050), added: 66525, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::UserHoldFileList` (r:1 w:1)
	/// Proof: `FileBank::UserHoldFileList` (`max_values`: None, `max_size`: Some(40000052), added: 40002527, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::File` (r:0 w:1)
	/// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 30]`.
	fn transfer_report(v: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4816 + v * (833 Â±0)`
		//  Estimated: `40003517`
		// Minimum execution time: 132_079_000 picoseconds.
		Weight::from_parts(160_182_023, 40003517)
			// Standard Error: 159_673
			.saturating_add(Weight::from_parts(2_559_055, 0).saturating_mul(v.into()))
			.saturating_add(RocksDbWeight::get().reads(20_u64))
			.saturating_add(RocksDbWeight::get().writes(21_u64))
	}
	/// Storage: `TeeWorker::MasterPubkey` (r:1 w:0)
	/// Proof: `TeeWorker::MasterPubkey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TeeWorker::Workers` (r:1 w:0)
	/// Proof: `TeeWorker::Workers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `FileBank::File` (r:1 w:1)
	/// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `SchedulerCredit::CurrentCounters` (r:1 w:1)
	/// Proof: `SchedulerCredit::CurrentCounters` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	/// Storage: `TeeWorker::LastWork` (r:1 w:1)
	/// Proof: `TeeWorker::LastWork` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn calculate_report() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5898`
		//  Estimated: `9292572`
		// Minimum execution time: 124_194_000 picoseconds.
		Weight::from_parts(157_038_000, 9292572)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `TeeWorker::Workers` (r:1 w:0)
	/// Proof: `TeeWorker::Workers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `TeeWorker::MasterPubkey` (r:1 w:0)
	/// Proof: `TeeWorker::MasterPubkey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TeeWorker::LastWork` (r:1 w:1)
	/// Proof: `TeeWorker::LastWork` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::PendingReplacements` (r:1 w:1)
	/// Proof: `Sminer::PendingReplacements` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	/// Storage: `SchedulerCredit::CurrentCounters` (r:1 w:1)
	/// Proof: `SchedulerCredit::CurrentCounters` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[8, 30]`.
	fn replace_idle_space() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4688`
		//  Estimated: `206644`
		// Minimum execution time: 109_706_000 picoseconds.
		Weight::from_parts(135_706_783, 206644)
			// Standard Error: 161_111
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `FileBank::File` (r:1 w:1)
	/// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::RestoralTarget` (r:12 w:0)
	/// Proof: `Sminer::RestoralTarget` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::MinerItems` (r:12 w:12)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::UserOwnedSpace` (r:1 w:1)
	/// Proof: `StorageHandler::UserOwnedSpace` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::TotalServiceSpace` (r:1 w:1)
	/// Proof: `StorageHandler::TotalServiceSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::Bucket` (r:1 w:1)
	/// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::UserHoldFileList` (r:1 w:1)
	/// Proof: `FileBank::UserHoldFileList` (`max_values`: None, `max_size`: Some(40000052), added: 40002527, mode: `MaxEncodedLen`)
	fn delete_file() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `41009`
		//  Estimated: `40003517`
		// Minimum execution time: 360_656_000 picoseconds.
		Weight::from_parts(470_737_000, 40003517)
			.saturating_add(RocksDbWeight::get().reads(29_u64))
			.saturating_add(RocksDbWeight::get().writes(17_u64))
	}
	/// Storage: `FileBank::Bucket` (r:1 w:1)
	/// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::UserBucketList` (r:1 w:1)
	/// Proof: `FileBank::UserBucketList` (`max_values`: None, `max_size`: Some(64050), added: 66525, mode: `MaxEncodedLen`)
	fn create_bucket() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `180`
		//  Estimated: `32036623`
		// Minimum execution time: 19_414_000 picoseconds.
		Weight::from_parts(20_234_000, 32036623)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `FileBank::Bucket` (r:1 w:1)
	/// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::UserBucketList` (r:1 w:1)
	/// Proof: `FileBank::UserBucketList` (`max_values`: None, `max_size`: Some(64050), added: 66525, mode: `MaxEncodedLen`)
	fn delete_bucket() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `403`
		//  Estimated: `32036623`
		// Minimum execution time: 24_268_000 picoseconds.
		Weight::from_parts(24_934_000, 32036623)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `FileBank::RestoralOrder` (r:1 w:1)
	/// Proof: `FileBank::RestoralOrder` (`max_values`: None, `max_size`: Some(284), added: 2759, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::File` (r:1 w:1)
	/// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	fn generate_restoral_order() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1759`
		//  Estimated: `9292572`
		// Minimum execution time: 44_623_000 picoseconds.
		Weight::from_parts(57_460_000, 9292572)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:0)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::RestoralOrder` (r:1 w:1)
	/// Proof: `FileBank::RestoralOrder` (`max_values`: None, `max_size`: Some(284), added: 2759, mode: `MaxEncodedLen`)
	fn claim_restoral_order() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4376`
		//  Estimated: `206644`
		// Minimum execution time: 46_358_000 picoseconds.
		Weight::from_parts(62_091_000, 206644)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:0)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::RestoralOrder` (r:1 w:1)
	/// Proof: `FileBank::RestoralOrder` (`max_values`: None, `max_size`: Some(284), added: 2759, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::RestoralTarget` (r:1 w:0)
	/// Proof: `Sminer::RestoralTarget` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::File` (r:1 w:1)
	/// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	fn claim_restoral_noexist_order() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5610`
		//  Estimated: `9292572`
		// Minimum execution time: 56_499_000 picoseconds.
		Weight::from_parts(70_522_000, 9292572)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:2 w:2)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::RestoralOrder` (r:1 w:1)
	/// Proof: `FileBank::RestoralOrder` (`max_values`: None, `max_size`: Some(284), added: 2759, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::File` (r:1 w:1)
	/// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::PendingReplacements` (r:1 w:1)
	/// Proof: `Sminer::PendingReplacements` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::RestoralTarget` (r:1 w:0)
	/// Proof: `Sminer::RestoralTarget` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	fn restoral_order_complete() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `9249`
		//  Estimated: `9292572`
		// Minimum execution time: 104_003_000 picoseconds.
		Weight::from_parts(127_926_000, 9292572)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `FileBank::File` (r:1 w:1)
	/// Proof: `FileBank::File` (`max_values`: None, `max_size`: Some(9289107), added: 9291582, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::Bucket` (r:2 w:2)
	/// Proof: `FileBank::Bucket` (`max_values`: None, `max_size`: Some(32033158), added: 32035633, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::UserOwnedSpace` (r:2 w:2)
	/// Proof: `StorageHandler::UserOwnedSpace` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `FileBank::UserHoldFileList` (r:2 w:2)
	/// Proof: `FileBank::UserHoldFileList` (`max_values`: None, `max_size`: Some(40000052), added: 40002527, mode: `MaxEncodedLen`)
	fn ownership_transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2609`
		//  Estimated: `80006044`
		// Minimum execution time: 89_104_000 picoseconds.
		Weight::from_parts(106_946_000, 80006044)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
}
