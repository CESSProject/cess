
//! Autogenerated weights for `pallet_sminer`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-04-12, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ytqaljn-virtual-machine`, CPU: `12th Gen Intel(R) Core(TM) i5-12400`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("cess-initial-devnet")`, DB CACHE: `1024`

// Executed Command:
// ./target/release/cess-node
// benchmark
// pallet
// --chain
// cess-initial-devnet
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// pallet_sminer
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --template=./.maintain/frame-weight-template.hbs
// --output=./pallets/sminer/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_sminer`.
pub trait WeightInfo {
	fn regnstk() -> Weight;
	fn increase_collateral() -> Weight;
	fn register_pois_key() -> Weight;
	fn update_beneficiary() -> Weight;
	fn update_peer_id() -> Weight;
	fn receive_reward(v: u32, ) -> Weight;
	fn miner_exit_prep() -> Weight;
	fn miner_exit() -> Weight;
	fn miner_withdraw() -> Weight;
	fn faucet_top_up() -> Weight;
	fn faucet() -> Weight;
	fn regnstk_assign_staking() -> Weight;
	fn increase_declaration_space() -> Weight;
}

/// Weights for `pallet_sminer` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::CounterForMinerItems` (r:1 w:1)
	/// Proof: `Sminer::CounterForMinerItems` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::RewardMap` (r:0 w:1)
	/// Proof: `Sminer::RewardMap` (`max_values`: None, `max_size`: Some(3592), added: 6067, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::StakingStartBlock` (r:0 w:1)
	/// Proof: `Sminer::StakingStartBlock` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn regnstk() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `183`
		//  Estimated: `206644`
		// Minimum execution time: 40_185_000 picoseconds.
		Weight::from_parts(61_828_000, 206644)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::StakingStartBlock` (r:0 w:1)
	/// Proof: `Sminer::StakingStartBlock` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn increase_collateral() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2666`
		//  Estimated: `206644`
		// Minimum execution time: 35_790_000 picoseconds.
		Weight::from_parts(36_955_000, 206644)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `TeeWorker::MasterPubkey` (r:1 w:0)
	/// Proof: `TeeWorker::MasterPubkey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TeeWorker::LastWork` (r:1 w:1)
	/// Proof: `TeeWorker::LastWork` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Sminer::AllMiner` (r:1 w:1)
	/// Proof: `Sminer::AllMiner` (`max_values`: Some(1), `max_size`: Some(6400004), added: 6400499, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::MinerPublicKey` (r:0 w:1)
	/// Proof: `Sminer::MinerPublicKey` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	fn register_pois_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2845`
		//  Estimated: `6401489`
		// Minimum execution time: 81_365_000 picoseconds.
		Weight::from_parts(101_009_000, 6401489)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	fn update_beneficiary() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2563`
		//  Estimated: `206644`
		// Minimum execution time: 18_800_000 picoseconds.
		Weight::from_parts(19_836_000, 206644)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	fn update_peer_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2563`
		//  Estimated: `206644`
		// Minimum execution time: 19_136_000 picoseconds.
		Weight::from_parts(50_152_000, 206644)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:0)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::CompleteMinerSnapShot` (r:1 w:1)
	/// Proof: `Sminer::CompleteMinerSnapShot` (`max_values`: None, `max_size`: Some(1940), added: 4415, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::RewardMap` (r:1 w:1)
	/// Proof: `Sminer::RewardMap` (`max_values`: None, `max_size`: Some(3592), added: 6067, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 80]`.
	fn receive_reward(v: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3827 + v * (39 Â±0)`
		//  Estimated: `206644`
		// Minimum execution time: 62_755_000 picoseconds.
		Weight::from_parts(75_950_137, 206644)
			// Standard Error: 21_450
			.saturating_add(Weight::from_parts(117_490, 0).saturating_mul(v.into()))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `Sminer::MinerLock` (r:1 w:1)
	/// Proof: `Sminer::MinerLock` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::StakingStartBlock` (r:1 w:0)
	/// Proof: `Sminer::StakingStartBlock` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `Scheduler::Lookup` (r:1 w:1)
	/// Proof: `Scheduler::Lookup` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Scheduler::Agenda` (r:1 w:1)
	/// Proof: `Scheduler::Agenda` (`max_values`: None, `max_size`: Some(10463), added: 12938, mode: `MaxEncodedLen`)
	fn miner_exit_prep() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3494`
		//  Estimated: `206644`
		// Minimum execution time: 49_322_000 picoseconds.
		Weight::from_parts(67_798_000, 206644)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::TotalIdleSpace` (r:1 w:1)
	/// Proof: `StorageHandler::TotalIdleSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::AllMiner` (r:1 w:1)
	/// Proof: `Sminer::AllMiner` (`max_values`: Some(1), `max_size`: Some(6400004), added: 6400499, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::RestoralTarget` (r:0 w:1)
	/// Proof: `Sminer::RestoralTarget` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	fn miner_exit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3685`
		//  Estimated: `6401489`
		// Minimum execution time: 36_286_000 picoseconds.
		Weight::from_parts(60_987_000, 6401489)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `Sminer::RestoralTarget` (r:1 w:0)
	/// Proof: `Sminer::RestoralTarget` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::MinerItems` (r:1 w:0)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::PendingReplacements` (r:0 w:1)
	/// Proof: `Sminer::PendingReplacements` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::MinerPublicKey` (r:0 w:1)
	/// Proof: `Sminer::MinerPublicKey` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	fn miner_withdraw() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3651`
		//  Estimated: `206644`
		// Minimum execution time: 48_374_000 picoseconds.
		Weight::from_parts(60_497_000, 206644)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn faucet_top_up() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `52`
		//  Estimated: `3593`
		// Minimum execution time: 48_798_000 picoseconds.
		Weight::from_parts(52_071_000, 3593)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Sminer::FacuetWhitelist` (r:1 w:0)
	/// Proof: `Sminer::FacuetWhitelist` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::FaucetRecordMap` (r:1 w:1)
	/// Proof: `Sminer::FaucetRecordMap` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn faucet() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `272`
		//  Estimated: `3593`
		// Minimum execution time: 53_599_000 picoseconds.
		Weight::from_parts(73_839_000, 3593)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::CounterForMinerItems` (r:1 w:1)
	/// Proof: `Sminer::CounterForMinerItems` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::RewardMap` (r:0 w:1)
	/// Proof: `Sminer::RewardMap` (`max_values`: None, `max_size`: Some(3592), added: 6067, mode: `MaxEncodedLen`)
	fn regnstk_assign_staking() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `80`
		//  Estimated: `206644`
		// Minimum execution time: 23_474_000 picoseconds.
		Weight::from_parts(30_797_000, 206644)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	fn increase_declaration_space() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3411`
		//  Estimated: `206644`
		// Minimum execution time: 25_368_000 picoseconds.
		Weight::from_parts(29_511_000, 206644)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::CounterForMinerItems` (r:1 w:1)
	/// Proof: `Sminer::CounterForMinerItems` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::RewardMap` (r:0 w:1)
	/// Proof: `Sminer::RewardMap` (`max_values`: None, `max_size`: Some(3592), added: 6067, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::StakingStartBlock` (r:0 w:1)
	/// Proof: `Sminer::StakingStartBlock` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn regnstk() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `183`
		//  Estimated: `206644`
		// Minimum execution time: 40_185_000 picoseconds.
		Weight::from_parts(61_828_000, 206644)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::StakingStartBlock` (r:0 w:1)
	/// Proof: `Sminer::StakingStartBlock` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn increase_collateral() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2666`
		//  Estimated: `206644`
		// Minimum execution time: 35_790_000 picoseconds.
		Weight::from_parts(36_955_000, 206644)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `TeeWorker::MasterPubkey` (r:1 w:0)
	/// Proof: `TeeWorker::MasterPubkey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TeeWorker::LastWork` (r:1 w:1)
	/// Proof: `TeeWorker::LastWork` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Sminer::AllMiner` (r:1 w:1)
	/// Proof: `Sminer::AllMiner` (`max_values`: Some(1), `max_size`: Some(6400004), added: 6400499, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::MinerPublicKey` (r:0 w:1)
	/// Proof: `Sminer::MinerPublicKey` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	fn register_pois_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2845`
		//  Estimated: `6401489`
		// Minimum execution time: 81_365_000 picoseconds.
		Weight::from_parts(101_009_000, 6401489)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	fn update_beneficiary() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2563`
		//  Estimated: `206644`
		// Minimum execution time: 18_800_000 picoseconds.
		Weight::from_parts(19_836_000, 206644)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	fn update_peer_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2563`
		//  Estimated: `206644`
		// Minimum execution time: 19_136_000 picoseconds.
		Weight::from_parts(50_152_000, 206644)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:0)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::CompleteMinerSnapShot` (r:1 w:1)
	/// Proof: `Sminer::CompleteMinerSnapShot` (`max_values`: None, `max_size`: Some(1940), added: 4415, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::RewardMap` (r:1 w:1)
	/// Proof: `Sminer::RewardMap` (`max_values`: None, `max_size`: Some(3592), added: 6067, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 80]`.
	fn receive_reward(v: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3827 + v * (39 Â±0)`
		//  Estimated: `206644`
		// Minimum execution time: 62_755_000 picoseconds.
		Weight::from_parts(75_950_137, 206644)
			// Standard Error: 21_450
			.saturating_add(Weight::from_parts(117_490, 0).saturating_mul(v.into()))
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `Sminer::MinerLock` (r:1 w:1)
	/// Proof: `Sminer::MinerLock` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::StakingStartBlock` (r:1 w:0)
	/// Proof: `Sminer::StakingStartBlock` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `Scheduler::Lookup` (r:1 w:1)
	/// Proof: `Scheduler::Lookup` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Scheduler::Agenda` (r:1 w:1)
	/// Proof: `Scheduler::Agenda` (`max_values`: None, `max_size`: Some(10463), added: 12938, mode: `MaxEncodedLen`)
	fn miner_exit_prep() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3494`
		//  Estimated: `206644`
		// Minimum execution time: 49_322_000 picoseconds.
		Weight::from_parts(67_798_000, 206644)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `StorageHandler::TotalIdleSpace` (r:1 w:1)
	/// Proof: `StorageHandler::TotalIdleSpace` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::AllMiner` (r:1 w:1)
	/// Proof: `Sminer::AllMiner` (`max_values`: Some(1), `max_size`: Some(6400004), added: 6400499, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::RestoralTarget` (r:0 w:1)
	/// Proof: `Sminer::RestoralTarget` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	fn miner_exit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3685`
		//  Estimated: `6401489`
		// Minimum execution time: 36_286_000 picoseconds.
		Weight::from_parts(60_987_000, 6401489)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `Sminer::RestoralTarget` (r:1 w:0)
	/// Proof: `Sminer::RestoralTarget` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::MinerItems` (r:1 w:0)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::PendingReplacements` (r:0 w:1)
	/// Proof: `Sminer::PendingReplacements` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::MinerPublicKey` (r:0 w:1)
	/// Proof: `Sminer::MinerPublicKey` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	fn miner_withdraw() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3651`
		//  Estimated: `206644`
		// Minimum execution time: 48_374_000 picoseconds.
		Weight::from_parts(60_497_000, 206644)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn faucet_top_up() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `52`
		//  Estimated: `3593`
		// Minimum execution time: 48_798_000 picoseconds.
		Weight::from_parts(52_071_000, 3593)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Sminer::FacuetWhitelist` (r:1 w:0)
	/// Proof: `Sminer::FacuetWhitelist` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::FaucetRecordMap` (r:1 w:1)
	/// Proof: `Sminer::FaucetRecordMap` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn faucet() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `272`
		//  Estimated: `3593`
		// Minimum execution time: 53_599_000 picoseconds.
		Weight::from_parts(73_839_000, 3593)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::CounterForMinerItems` (r:1 w:1)
	/// Proof: `Sminer::CounterForMinerItems` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Sminer::RewardMap` (r:0 w:1)
	/// Proof: `Sminer::RewardMap` (`max_values`: None, `max_size`: Some(3592), added: 6067, mode: `MaxEncodedLen`)
	fn regnstk_assign_staking() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `80`
		//  Estimated: `206644`
		// Minimum execution time: 23_474_000 picoseconds.
		Weight::from_parts(30_797_000, 206644)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Sminer::MinerItems` (r:1 w:1)
	/// Proof: `Sminer::MinerItems` (`max_values`: None, `max_size`: Some(203179), added: 205654, mode: `MaxEncodedLen`)
	fn increase_declaration_space() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3411`
		//  Estimated: `206644`
		// Minimum execution time: 25_368_000 picoseconds.
		Weight::from_parts(29_511_000, 206644)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
