[package]
authors = ['CESS LAB']
build = 'build.rs'
description = 'A fresh FRAME-based Substrate node, ready for hacking.'
edition = '2021'
license = 'Unlicense'
name = 'cess-node'
repository = 'https://github.com/CESSProject/cess'
version = '0.8.0'

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[[bin]]
name = "cess-node"

[dependencies]
array-bytes = { workspace = true }
async-trait = { workspace = true }
clap = { workspace = true, features = ["derive"] }
codec = { workspace = true, default-features = false }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
jsonrpsee = { workspace = true, features = ["server"] }
futures = { workspace = true, features = ["thread-pool"] }
log = { workspace = true }
rand = { workspace = true }

polkadot-sdk = { workspace = true, default-features = true, features = [
	"experimental",
	"frame-benchmarking-cli",
	"frame-remote-externalities",
	"frame-support-procedural-tools",
	"generate-bags",
	"mmr-rpc",
	"pallet-transaction-payment-rpc",
	"sc-allocator",
	"sc-authority-discovery",
	"sc-basic-authorship",
	"sc-block-builder",
	"sc-chain-spec",
	"sc-cli",
	"sc-client-api",
	"sc-client-db",
	"sc-consensus-epochs",
	"sc-consensus-grandpa-rpc",
	"sc-consensus-grandpa",
	"sc-consensus-slots",
	"sc-consensus",
	"sc-executor-common",
	"sc-executor-wasmtime",
	"sc-executor",
	"sc-keystore",
	"sc-network-common",
	"sc-network-gossip",
	"sc-network-light",
	"sc-network-sync",
	"sc-network-transactions",
	"sc-network",
	"sc-offchain",
	"sc-proposer-metrics",
	"sc-rpc-api",
	"sc-rpc-server",
	"sc-rpc-spec-v2",
	"sc-rpc",
	"sc-service",
	"sc-state-db",
	"sc-storage-monitor",
	"sc-sync-state-rpc",
	"sc-sysinfo",
	"sc-telemetry",
	"sc-tracing",
	"sc-transaction-pool-api",
	"sc-transaction-pool",
	"sc-utils",
	"sp-blockchain",
	"sp-consensus-slots",
	"sp-consensus",
	"sp-keyring",
	"sp-keystore",
	"sp-panic-handler",
	"sp-rpc",
	"sp-timestamp",
	"sp-transaction-storage-proof",
	"staging-chain-spec-builder",
	"staging-node-inspect",
	"staging-tracking-allocator",
	"std",
	"substrate-build-script-utils",
	"substrate-frame-rpc-support",
	"substrate-frame-rpc-system",
	"substrate-prometheus-endpoint",
	"substrate-rpc-client",
	"substrate-state-trie-migration-rpc",
] }

cessp-consensus-rrsc = { workspace = true, features = ["default"] }
cessc-consensus-rrsc = { workspace = true }
cessc-consensus-rrsc-rpc = { workspace = true }
cessc-sync-state-rpc = { workspace = true }
cess-node-primitives = { workspace = true, features = ["std"] }
cess-node-runtime = { workspace = true, features = ["std"] }
ces-node-rpc-ext = { workspace = true }
ces-pallet-mq = { workspace = true }
ces-pallet-mq-runtime-api = { workspace = true }
pallet-audit = { workspace = true, features = ["default"] }

# Frontier
fc-api = { workspace = true }
fc-cli = { workspace = true }
fc-consensus = { workspace = true }
fc-db = { workspace = true }
fc-mapping-sync = { workspace = true }
fc-rpc = { workspace = true }
fc-rpc-core = { workspace = true }
fc-storage = { workspace = true }
fp-account = { workspace = true }
fp-dynamic-fee = { workspace = true, features = ["default"] }
fp-evm = { workspace = true, features = ["default"] }
fp-rpc = { workspace = true, features = ["default"] }

[build-dependencies]
polkadot-sdk = { workspace = true, features = ["substrate-build-script-utils"] }

[features]
default = ["rocksdb", "sql", "txpool"]
rocksdb = [
	"fc-cli/rocksdb",
	"fc-db/rocksdb",
	"fc-mapping-sync/rocksdb",
	"fc-rpc/rocksdb",
]
sql = ["fc-db/sql", "fc-mapping-sync/sql"]
txpool = ["fc-rpc/txpool"]
runtime-benchmarks = [
	"polkadot-sdk/runtime-benchmarks",
	"cess-node-runtime/runtime-benchmarks",
]
try-runtime = ["cess-node-runtime/try-runtime"]
only-attestation = ["cess-node-runtime/only-attestation"]
verify-cesealbin = ["cess-node-runtime/verify-cesealbin"]
