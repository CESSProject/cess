[package]
authors = ["CESS LAB"]
edition = "2021"
license = "Unlicense"
name = "cess-node-runtime"
repository = "https://github.com/CESSProject/cess"
version = "0.7.5"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]

# third-party dependencies
codec = { version = "3.2.2", package = "parity-scale-codec", default-features = false, features = [
	"derive",
	"max-encoded-len",
] }
scale-info = { workspace = true, features = ["derive"] }
# static_assertions
log = { workspace = true }
# hex-literal = { optional = true, version = "0.3.4" }

# primitives
sp-authority-discovery = { workspace = true }
cessp-consensus-rrsc = { workspace = true }
sp-block-builder = { workspace = true }
sp-inherents = { workspace = true }
# node-premitives
sp-offchain = { workspace = true }
sp-core = { workspace = true }
sp-std = { workspace = true }
sp-api = { workspace = true }
sp-runtime = { workspace = true }
sp-staking = { workspace = true }
sp-session = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }
sp-io = { workspace = true }
cp-enclave-verify = { path = '../primitives/enclave-verify', version = '0.1.0', default-features = false }
cp-cess-common = { path = '../primitives/common', version = '0.1.0', default-features = false }

# frame dependencies
frame-executive = { workspace = true }
frame-benchmarking = { workspace = true, optional = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-system-benchmarking = { workspace = true, optional = true }
frame-election-provider-support = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
frame-try-runtime = { workspace = true, optional = true }
# pallet-alliance
pallet-assets = { workspace = true }
pallet-authority-discovery = { workspace = true }
pallet-authorship = { workspace = true }
pallet-rrsc = { workspace = true }
pallet-bags-list = { workspace = true }
pallet-balances = { workspace = true }
pallet-bounties = { workspace = true }
pallet-child-bounties = { workspace = true }
pallet-collective = { workspace = true }
pallet-contracts = { workspace = true }
pallet-contracts-primitives = { workspace = true }
# pallet-conviction-voting
# pallet-democracy
pallet-election-provider-multi-phase = { workspace = true }
# pallet-election-provider-support-benchmarking
# pallet-elections-phragmen
# pallet-fast-unstake
# pallet-nis
pallet-grandpa = { workspace = true }
pallet-im-online = { workspace = true }
pallet-indices = {  workspace = true }
# pallet-identity
# pallet-lottery
pallet-membership = { workspace = true }
# pallet-message-queue
pallet-mmr = { workspace = true }
pallet-multisig = { workspace = true }
# pallet-nomination-pools
# pallet-nomination-pools-benchmarking
# pallet-nomination-pools-runtime-api
pallet-offences = { workspace = true }
# pallet-offences-benchmarking
pallet-preimage = { workspace = true }
pallet-proxy = { workspace = true }
pallet-insecure-randomness-collective-flip = { workspace = true }
# pallet-ranked-collective
# pallet-recovery
# pallet-referenda
# pallet-remark
# pallet-root-testing
pallet-session = { workspace = true, features = [ "historical" ] }
# pallet-session-benchmarking
pallet-cess-staking = { default-features = false, path = "../c-pallets/staking" }
# pallet-staking-reward-curve
# pallet-state-trie-migration
pallet-scheduler = { workspace = true }
# pallet-society
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
# pallet-tips
pallet-treasury = { workspace = true }
# pallet-utility
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-asset-tx-payment = { workspace = true }

cp-scheduler-credit = { default-features = false, path = "../primitives/scheduler-credit" }
pallet-scheduler-credit = { default-features = false, path = "../c-pallets/scheduler-credit" }

# local dependencies
pallet-sminer = { default-features = false, path = "../c-pallets/sminer" }
pallet-cess-treasury = { default-features = false, path = "../c-pallets/cess-treasury" }
pallet-audit = { default-features = false, path = "../c-pallets/audit" }
pallet-file-bank = { default-features = false, path = "../c-pallets/file-bank" }
pallet-tee-worker = { default-features = false, path = "../c-pallets/tee-worker" }
pallet-storage-handler = { default-features = false, path = "../c-pallets/storage-handler" }
pallet-oss = { default-features = false, path = "../c-pallets/oss" }
pallet-cacher = { default-features = false, path = "../c-pallets/cacher" }

# Frontier
fp-account = { workspace = true }
fp-evm = { workspace = true }
fp-rpc = { workspace = true }
fp-self-contained = { workspace = true }
# Frontier
pallet-base-fee = { workspace = true }
pallet-dynamic-fee = { workspace = true }
pallet-ethereum = { workspace = true }
pallet-evm = { workspace = true }
pallet-evm-chain-id = { workspace = true }
pallet-evm-precompile-modexp = { workspace = true }
pallet-evm-precompile-sha3fips = { workspace = true }
pallet-evm-precompile-simple = { workspace = true }

[build-dependencies]
substrate-wasm-builder = { workspace = true, optional = true }

[features]
default = ["std"]
with-tracing = ["frame-executive/with-tracing"]
std = [
    "pallet-authority-discovery/std",
    "pallet-authorship/std",
    "pallet-asset-tx-payment/std",
    "pallet-bounties/std",
    "pallet-collective/std",    
    "pallet-cess-staking/std",
    "pallet-election-provider-multi-phase/std",
    "frame-election-provider-support/std",
    "frame-system-benchmarking?/std",
    "pallet-im-online/std",
    "pallet-membership/std",
    "pallet-multisig/std",
    "pallet-offences/std",
    "pallet-scheduler/std",
    "pallet-session/std",
    "pallet-treasury/std",
    "pallet-file-bank/std",
    "pallet-audit/std",
    "pallet-sminer/std",
    "pallet-tee-worker/std",
    "pallet-storage-handler/std",
		"pallet-oss/std",
    "pallet-cacher/std",
    "pallet-cess-treasury/std",
    "pallet-preimage/std",
    "pallet-proxy/std",
    "pallet-assets/std",
    "pallet-child-bounties/std",
    "pallet-mmr/std",
    "sp-io/std",
    "pallet-indices/std",
    "sp-authority-discovery/std",
    "sp-staking/std",
    "codec/std",
	  "frame-try-runtime?/std",
    "frame-benchmarking/std",
    "frame-executive/std",
    "frame-support/std",
    "frame-system-rpc-runtime-api/std",
    "frame-system/std",
    "pallet-rrsc/std",
    "pallet-bags-list/std",
    "pallet-balances/std",
    "pallet-grandpa/std",
    "pallet-insecure-randomness-collective-flip/std",
    "pallet-sudo/std",
    "pallet-timestamp/std",
    "pallet-transaction-payment-rpc-runtime-api/std",
    "pallet-transaction-payment/std",
    "pallet-contracts/std",
		"pallet-contracts-primitives/std",
    "scale-info/std",
    "sp-api/std",
    "sp-block-builder/std",
    "cessp-consensus-rrsc/std",
    "sp-core/std",
    "sp-inherents/std",
    "sp-offchain/std",
    "sp-runtime/std",
    "sp-session/std",
    "sp-std/std",
    "sp-transaction-pool/std",
    "sp-version/std",
    # Frontier
    "fp-account/std",
    "fp-evm/std",
    "fp-rpc/std",
    "fp-self-contained/std",
    # Frontier FRAME
    "pallet-base-fee/std",
    "pallet-dynamic-fee/std",
    "pallet-ethereum/std",
    "pallet-evm/std",
    "pallet-evm-chain-id/std",
    "pallet-evm-precompile-modexp/std",
    "pallet-evm-precompile-sha3fips/std",
    "pallet-evm-precompile-simple/std",

    "log/std",
    "pallet-scheduler-credit/std",
    "cp-scheduler-credit/std",
    "cp-enclave-verify/std",
    "substrate-wasm-builder",
]
runtime-benchmarks = [
    "frame-benchmarking/runtime-benchmarks",
    "frame-system-benchmarking/runtime-benchmarks",
    "frame-support/runtime-benchmarks",
    "frame-system/runtime-benchmarks",
    #"hex-literal",
    "pallet-balances/runtime-benchmarks",
    "pallet-timestamp/runtime-benchmarks",
    "pallet-collective/runtime-benchmarks",
    "pallet-file-bank/runtime-benchmarks",
    "pallet-tee-worker/runtime-benchmarks",
		"pallet-oss/runtime-benchmarks",
    "pallet-cess-staking/runtime-benchmarks",
    "pallet-cacher/runtime-benchmarks",
    "pallet-storage-handler/runtime-benchmarks",
    "pallet-audit/runtime-benchmarks",
    "pallet-sminer/runtime-benchmarks",
    "sp-runtime/runtime-benchmarks",
    "pallet-contracts/runtime-benchmarks",
    "pallet-ethereum/runtime-benchmarks",
		"pallet-evm/runtime-benchmarks",
]
try-runtime = [
	"frame-executive/try-runtime",
	"frame-try-runtime",
	"frame-system/try-runtime",
	"pallet-assets/try-runtime",
	"pallet-authority-discovery/try-runtime",
	"pallet-authorship/try-runtime",
  "pallet-asset-tx-payment/try-runtime",
	"pallet-rrsc/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-bounties/try-runtime",
	"pallet-child-bounties/try-runtime",
	"pallet-collective/try-runtime",
	"pallet-contracts/try-runtime",
	"pallet-election-provider-multi-phase/try-runtime",
	"pallet-grandpa/try-runtime",
	"pallet-im-online/try-runtime",
	"pallet-indices/try-runtime",
	"pallet-membership/try-runtime",
	"pallet-mmr/try-runtime",
  "pallet-multisig/try-runtime",
	"pallet-offences/try-runtime",
	"pallet-preimage/try-runtime",
  "pallet-proxy/try-runtime",
	"pallet-insecure-randomness-collective-flip/try-runtime",
	"pallet-scheduler/try-runtime",
	"pallet-session/try-runtime",
	"pallet-cess-staking/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-treasury/try-runtime",
	"pallet-file-bank/try-runtime",
]
