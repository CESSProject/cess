// This file is part of Substrate.

// Copyright (C) 2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_file_bank
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-08-28, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("cess-initial-testnet"), DB CACHE: 1024

// Executed Command:
// ./target/release/cess-node
// benchmark
// pallet
// --chain
// cess-initial-testnet
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// pallet_file_bank
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --template=./.maintain/frame-weight-template.hbs
// --output=./c-pallets/file-bank/src/weights_demo.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_file_bank.
pub trait WeightInfo {
	fn cert_idle_space() -> Weight;
	fn upload_declaration(v: u32, ) -> Weight;
	fn upload_declaration_expected_max(v: u32, ) -> Weight;
	fn transfer_report(v: u32, ) -> Weight;
	fn transfer_report_last(v: u32, ) -> Weight;
	fn upload_declaration_fly_upload(v: u32, ) -> Weight;
	fn deal_reassign_miner(v: u32, ) -> Weight;
	fn deal_reassign_miner_exceed_limit(v: u32, ) -> Weight;
	fn calculate_end(v: u32, ) -> Weight;
	fn replace_idle_space() -> Weight;
	fn delete_file(v: u32, ) -> Weight;
	fn create_bucket() -> Weight;
	fn delete_bucket() -> Weight;
	fn generate_restoral_order() -> Weight;
	fn claim_restoral_order() -> Weight;
	fn restoral_order_complete() -> Weight;
	fn claim_restoral_noexist_order() -> Weight;
}

/// Weights for pallet_file_bank using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: TeeWorker TeePodr2Pk (r:1 w:0)
	// Storage: Sminer MinerItems (r:1 w:1)
	// Storage: StorageHandler TotalIdleSpace (r:1 w:1)
	fn cert_idle_space() -> Weight {
		(1_526_565_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: StorageHandler UserOwnedSpace (r:1 w:1)
	// Storage: FileBank File (r:1 w:0)
	// Storage: Sminer AllMiner (r:1 w:0)
	// Storage: Babe AuthorVrfRandomness (r:1 w:0)
	// Storage: FileBank TaskFailedCount (r:1 w:0)
	// Storage: Sminer MinerItems (r:1 w:1)
	// Storage: Scheduler Lookup (r:1 w:1)
	// Storage: Scheduler Agenda (r:1 w:1)
	// Storage: FileBank DealMap (r:0 w:1)
	fn upload_declaration(v: u32, ) -> Weight {
		(193_518_325 as Weight)
			// Standard Error: 81_931
			.saturating_add((1_556_936 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(11 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
	// Storage: StorageHandler UserOwnedSpace (r:1 w:1)
	// Storage: FileBank File (r:1 w:0)
	// Storage: Sminer AllMiner (r:1 w:0)
	// Storage: Babe AuthorVrfRandomness (r:1 w:0)
	// Storage: FileBank TaskFailedCount (r:15 w:0)
	// Storage: Sminer MinerItems (r:15 w:2)
	// Storage: Scheduler Lookup (r:1 w:1)
	// Storage: Scheduler Agenda (r:1 w:1)
	// Storage: FileBank DealMap (r:0 w:1)
	fn upload_declaration_expected_max(v: u32, ) -> Weight {
		(417_790_915 as Weight)
			// Standard Error: 90_219
			.saturating_add((448_381 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(36 as Weight))
			.saturating_add(T::DbWeight::get().writes(6 as Weight))
	}
	// Storage: FileBank DealMap (r:1 w:1)
	fn transfer_report(v: u32, ) -> Weight {
		(72_203_328 as Weight)
			// Standard Error: 26_036
			.saturating_add((798_142 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: FileBank DealMap (r:1 w:1)
	// Storage: FileBank PendingReplacements (r:3 w:3)
	// Storage: FileBank TaskFailedCount (r:3 w:3)
	// Storage: StorageHandler UserOwnedSpace (r:1 w:1)
	// Storage: StorageHandler TotalIdleSpace (r:1 w:1)
	// Storage: StorageHandler TotalServiceSpace (r:1 w:1)
	// Storage: Scheduler Lookup (r:1 w:1)
	// Storage: Scheduler Agenda (r:2 w:2)
	// Storage: FileBank Bucket (r:1 w:1)
	// Storage: FileBank UserBucketList (r:1 w:1)
	// Storage: FileBank UserHoldFileList (r:1 w:1)
	// Storage: FileBank File (r:0 w:1)
	fn transfer_report_last(v: u32, ) -> Weight {
		(183_457_174 as Weight)
			// Standard Error: 73_260
			.saturating_add((4_738_236 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(16 as Weight))
			.saturating_add(T::DbWeight::get().writes(17 as Weight))
	}
	// Storage: StorageHandler UserOwnedSpace (r:1 w:1)
	// Storage: FileBank File (r:1 w:1)
	// Storage: FileBank Bucket (r:1 w:1)
	// Storage: FileBank UserBucketList (r:1 w:1)
	// Storage: FileBank UserHoldFileList (r:1 w:1)
	fn upload_declaration_fly_upload(v: u32, ) -> Weight {
		(117_464_406 as Weight)
			// Standard Error: 39_959
			.saturating_add((916_856 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
	}
	// Storage: FileBank DealMap (r:1 w:1)
	// Storage: Sminer AllMiner (r:1 w:0)
	// Storage: Babe AuthorVrfRandomness (r:1 w:0)
	// Storage: FileBank TaskFailedCount (r:18 w:3)
	// Storage: Sminer MinerItems (r:18 w:6)
	// Storage: Scheduler Lookup (r:1 w:1)
	// Storage: Scheduler Agenda (r:1 w:1)
	fn deal_reassign_miner(v: u32, ) -> Weight {
		(444_951_473 as Weight)
			// Standard Error: 75_341
			.saturating_add((866_536 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(41 as Weight))
			.saturating_add(T::DbWeight::get().writes(12 as Weight))
	}
	// Storage: FileBank DealMap (r:1 w:1)
	// Storage: StorageHandler UserOwnedSpace (r:1 w:1)
	// Storage: Sminer MinerItems (r:3 w:3)
	fn deal_reassign_miner_exceed_limit(v: u32, ) -> Weight {
		(113_027_061 as Weight)
			// Standard Error: 35_814
			.saturating_add((602_107 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
	}
	// Storage: FileBank DealMap (r:1 w:1)
	// Storage: Sminer MinerItems (r:3 w:3)
	// Storage: FileBank File (r:1 w:1)
	fn calculate_end(v: u32, ) -> Weight {
		(152_148_501 as Weight)
			// Standard Error: 32_534
			.saturating_add((3_139_336 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
	}
	// Storage: TeeWorker TeePodr2Pk (r:1 w:0)
	// Storage: Sminer MinerItems (r:1 w:1)
	// Storage: FileBank PendingReplacements (r:1 w:1)
	fn replace_idle_space() -> Weight {
		(1_508_960_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: FileBank File (r:1 w:1)
	// Storage: StorageHandler UserOwnedSpace (r:1 w:1)
	// Storage: StorageHandler TotalServiceSpace (r:1 w:1)
	// Storage: FileBank Bucket (r:1 w:1)
	// Storage: FileBank UserHoldFileList (r:1 w:1)
	// Storage: Sminer RestoralTarget (r:3 w:0)
	// Storage: Sminer MinerItems (r:3 w:3)
	fn delete_file(v: u32, ) -> Weight {
		(190_020_234 as Weight)
			// Standard Error: 110_544
			.saturating_add((4_197_987 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(10 as Weight))
			.saturating_add(T::DbWeight::get().writes(8 as Weight))
	}
	// Storage: FileBank Bucket (r:1 w:1)
	// Storage: FileBank UserBucketList (r:1 w:1)
	fn create_bucket() -> Weight {
		(45_647_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: FileBank Bucket (r:1 w:1)
	// Storage: FileBank UserBucketList (r:1 w:1)
	fn delete_bucket() -> Weight {
		(52_822_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: FileBank RestoralOrder (r:1 w:1)
	// Storage: FileBank File (r:1 w:1)
	fn generate_restoral_order() -> Weight {
		(92_979_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Sminer MinerItems (r:1 w:0)
	// Storage: FileBank RestoralOrder (r:1 w:1)
	fn claim_restoral_order() -> Weight {
		(73_633_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Sminer MinerItems (r:2 w:2)
	// Storage: FileBank RestoralOrder (r:1 w:1)
	// Storage: FileBank File (r:1 w:1)
	// Storage: FileBank PendingReplacements (r:1 w:1)
	// Storage: Sminer RestoralTarget (r:1 w:0)
	fn restoral_order_complete() -> Weight {
		(197_280_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
	}
	// Storage: Sminer MinerItems (r:1 w:0)
	// Storage: FileBank RestoralOrder (r:1 w:1)
	// Storage: Sminer RestoralTarget (r:1 w:0)
	// Storage: FileBank File (r:1 w:1)
	fn claim_restoral_noexist_order() -> Weight {
		(118_929_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: TeeWorker TeePodr2Pk (r:1 w:0)
	// Storage: Sminer MinerItems (r:1 w:1)
	// Storage: StorageHandler TotalIdleSpace (r:1 w:1)
	fn cert_idle_space() -> Weight {
		(1_526_565_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	// Storage: StorageHandler UserOwnedSpace (r:1 w:1)
	// Storage: FileBank File (r:1 w:0)
	// Storage: Sminer AllMiner (r:1 w:0)
	// Storage: Babe AuthorVrfRandomness (r:1 w:0)
	// Storage: FileBank TaskFailedCount (r:1 w:0)
	// Storage: Sminer MinerItems (r:1 w:1)
	// Storage: Scheduler Lookup (r:1 w:1)
	// Storage: Scheduler Agenda (r:1 w:1)
	// Storage: FileBank DealMap (r:0 w:1)
	fn upload_declaration(v: u32, ) -> Weight {
		(193_518_325 as Weight)
			// Standard Error: 81_931
			.saturating_add((1_556_936 as Weight).saturating_mul(v as Weight))
			.saturating_add(RocksDbWeight::get().reads(11 as Weight))
			.saturating_add(RocksDbWeight::get().writes(7 as Weight))
	}
	// Storage: StorageHandler UserOwnedSpace (r:1 w:1)
	// Storage: FileBank File (r:1 w:0)
	// Storage: Sminer AllMiner (r:1 w:0)
	// Storage: Babe AuthorVrfRandomness (r:1 w:0)
	// Storage: FileBank TaskFailedCount (r:15 w:0)
	// Storage: Sminer MinerItems (r:15 w:2)
	// Storage: Scheduler Lookup (r:1 w:1)
	// Storage: Scheduler Agenda (r:1 w:1)
	// Storage: FileBank DealMap (r:0 w:1)
	fn upload_declaration_expected_max(v: u32, ) -> Weight {
		(417_790_915 as Weight)
			// Standard Error: 90_219
			.saturating_add((448_381 as Weight).saturating_mul(v as Weight))
			.saturating_add(RocksDbWeight::get().reads(36 as Weight))
			.saturating_add(RocksDbWeight::get().writes(6 as Weight))
	}
	// Storage: FileBank DealMap (r:1 w:1)
	fn transfer_report(v: u32, ) -> Weight {
		(72_203_328 as Weight)
			// Standard Error: 26_036
			.saturating_add((798_142 as Weight).saturating_mul(v as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: FileBank DealMap (r:1 w:1)
	// Storage: FileBank PendingReplacements (r:3 w:3)
	// Storage: FileBank TaskFailedCount (r:3 w:3)
	// Storage: StorageHandler UserOwnedSpace (r:1 w:1)
	// Storage: StorageHandler TotalIdleSpace (r:1 w:1)
	// Storage: StorageHandler TotalServiceSpace (r:1 w:1)
	// Storage: Scheduler Lookup (r:1 w:1)
	// Storage: Scheduler Agenda (r:2 w:2)
	// Storage: FileBank Bucket (r:1 w:1)
	// Storage: FileBank UserBucketList (r:1 w:1)
	// Storage: FileBank UserHoldFileList (r:1 w:1)
	// Storage: FileBank File (r:0 w:1)
	fn transfer_report_last(v: u32, ) -> Weight {
		(183_457_174 as Weight)
			// Standard Error: 73_260
			.saturating_add((4_738_236 as Weight).saturating_mul(v as Weight))
			.saturating_add(RocksDbWeight::get().reads(16 as Weight))
			.saturating_add(RocksDbWeight::get().writes(17 as Weight))
	}
	// Storage: StorageHandler UserOwnedSpace (r:1 w:1)
	// Storage: FileBank File (r:1 w:1)
	// Storage: FileBank Bucket (r:1 w:1)
	// Storage: FileBank UserBucketList (r:1 w:1)
	// Storage: FileBank UserHoldFileList (r:1 w:1)
	fn upload_declaration_fly_upload(v: u32, ) -> Weight {
		(117_464_406 as Weight)
			// Standard Error: 39_959
			.saturating_add((916_856 as Weight).saturating_mul(v as Weight))
			.saturating_add(RocksDbWeight::get().reads(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
	}
	// Storage: FileBank DealMap (r:1 w:1)
	// Storage: Sminer AllMiner (r:1 w:0)
	// Storage: Babe AuthorVrfRandomness (r:1 w:0)
	// Storage: FileBank TaskFailedCount (r:18 w:3)
	// Storage: Sminer MinerItems (r:18 w:6)
	// Storage: Scheduler Lookup (r:1 w:1)
	// Storage: Scheduler Agenda (r:1 w:1)
	fn deal_reassign_miner(v: u32, ) -> Weight {
		(444_951_473 as Weight)
			// Standard Error: 75_341
			.saturating_add((866_536 as Weight).saturating_mul(v as Weight))
			.saturating_add(RocksDbWeight::get().reads(41 as Weight))
			.saturating_add(RocksDbWeight::get().writes(12 as Weight))
	}
	// Storage: FileBank DealMap (r:1 w:1)
	// Storage: StorageHandler UserOwnedSpace (r:1 w:1)
	// Storage: Sminer MinerItems (r:3 w:3)
	fn deal_reassign_miner_exceed_limit(v: u32, ) -> Weight {
		(113_027_061 as Weight)
			// Standard Error: 35_814
			.saturating_add((602_107 as Weight).saturating_mul(v as Weight))
			.saturating_add(RocksDbWeight::get().reads(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
	}
	// Storage: FileBank DealMap (r:1 w:1)
	// Storage: Sminer MinerItems (r:3 w:3)
	// Storage: FileBank File (r:1 w:1)
	fn calculate_end(v: u32, ) -> Weight {
		(152_148_501 as Weight)
			// Standard Error: 32_534
			.saturating_add((3_139_336 as Weight).saturating_mul(v as Weight))
			.saturating_add(RocksDbWeight::get().reads(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
	}
	// Storage: TeeWorker TeePodr2Pk (r:1 w:0)
	// Storage: Sminer MinerItems (r:1 w:1)
	// Storage: FileBank PendingReplacements (r:1 w:1)
	fn replace_idle_space() -> Weight {
		(1_508_960_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	// Storage: FileBank File (r:1 w:1)
	// Storage: StorageHandler UserOwnedSpace (r:1 w:1)
	// Storage: StorageHandler TotalServiceSpace (r:1 w:1)
	// Storage: FileBank Bucket (r:1 w:1)
	// Storage: FileBank UserHoldFileList (r:1 w:1)
	// Storage: Sminer RestoralTarget (r:3 w:0)
	// Storage: Sminer MinerItems (r:3 w:3)
	fn delete_file(v: u32, ) -> Weight {
		(190_020_234 as Weight)
			// Standard Error: 110_544
			.saturating_add((4_197_987 as Weight).saturating_mul(v as Weight))
			.saturating_add(RocksDbWeight::get().reads(10 as Weight))
			.saturating_add(RocksDbWeight::get().writes(8 as Weight))
	}
	// Storage: FileBank Bucket (r:1 w:1)
	// Storage: FileBank UserBucketList (r:1 w:1)
	fn create_bucket() -> Weight {
		(45_647_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	// Storage: FileBank Bucket (r:1 w:1)
	// Storage: FileBank UserBucketList (r:1 w:1)
	fn delete_bucket() -> Weight {
		(52_822_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	// Storage: FileBank RestoralOrder (r:1 w:1)
	// Storage: FileBank File (r:1 w:1)
	fn generate_restoral_order() -> Weight {
		(92_979_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	// Storage: Sminer MinerItems (r:1 w:0)
	// Storage: FileBank RestoralOrder (r:1 w:1)
	fn claim_restoral_order() -> Weight {
		(73_633_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Sminer MinerItems (r:2 w:2)
	// Storage: FileBank RestoralOrder (r:1 w:1)
	// Storage: FileBank File (r:1 w:1)
	// Storage: FileBank PendingReplacements (r:1 w:1)
	// Storage: Sminer RestoralTarget (r:1 w:0)
	fn restoral_order_complete() -> Weight {
		(197_280_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(6 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
	}
	// Storage: Sminer MinerItems (r:1 w:0)
	// Storage: FileBank RestoralOrder (r:1 w:1)
	// Storage: Sminer RestoralTarget (r:1 w:0)
	// Storage: FileBank File (r:1 w:1)
	fn claim_restoral_noexist_order() -> Weight {
		(118_929_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
}